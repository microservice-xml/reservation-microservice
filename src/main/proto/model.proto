syntax = "proto3";

option java_multiple_files = true;
package communication;
import "google/protobuf/timestamp.proto";

service ReservationService {
  rpc createRequest(Reservation) returns (MessageResponse);
  rpc findById(Id) returns (Reservation);
  rpc findAll(EmptyMessage) returns (ListReservation);
  rpc findAllByStatus(Status) returns (ListReservation);
  rpc acceptReservationManual(Id) returns (MessageResponse);
  rpc rejectRequest(Id) returns (MessageResponse);
  rpc acceptReservationAuto(Reservation) returns(MessageResponse);
  rpc cancel(Id) returns(MessageResponse);
  rpc findAllByUserId(LongId) returns (ListReservation);
  rpc findByAccomodationId(LongId) returns (ListReservation);
}

service UserCommunicationService {
  rpc getReservation(UserIdRequest) returns (BooleanResponse);
}

service UserService{
  rpc incPenalties(LongId) returns (EmptyMessage);
}

service AccommodationService {
  rpc searchByAvailabilityRange(SearchRequest) returns (SearchResponse);
}

message SearchRequest {
  repeated int64 accommodationIds = 1;
  int32 startYear = 2;
  int32 startMonth = 3;
  int32 startDay = 4;
  int32 endYear = 5;
  int32 endMonth = 6;
  int32 endDay = 7;
}

message SearchResponse {
  repeated int64 accommodationIds = 1;
}

enum ReservationStatus {
    PENDING = 0;
    ACCEPTED = 1;
    DECLINED = 2;
}

message Reservation {
  string id = 1;
  google.protobuf.Timestamp start = 2;
  google.protobuf.Timestamp end = 3;
  uint64 userId = 4;
  ReservationStatus status = 5;
  string slotId = 6;
  uint32 numberOfGuests = 7;
}
message ListReservation{
  repeated Reservation reservations = 1;
}

message Accommodation {
  string id = 1;
  string city = 2;
  uint64 accommodationId = 3;
}

message AvailabilitySlot{
  string id = 1;
  google.protobuf.Timestamp start = 2;
  google.protobuf.Timestamp end = 3;
  double price = 4;
  repeated Reservation reservations = 5;
}

message Id{
  string id = 1;
}

message LongId{
  uint64 id = 1;
}
message Status{
  ReservationStatus status = 1;
}

message MessageResponse{
  string message = 1;
}
message EmptyMessage {
}

message BooleanResponse {
  bool available = 1;
}

message UserIdRequest {
  uint64 id = 1;
}

